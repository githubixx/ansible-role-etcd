---
# Copyright (C) 2022 Robert Wimmer
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Verify setup
  hosts: all
  strategy: linear
  vars:
    etcdctl_version: "3.5"
    etcdctl_endpoint_health: "is healthy"
    etcdctl_put: "testvalue"
  tasks:
    - name: Execute etcdctl version to capture output
      ansible.builtin.command: etcdctl version
      register: etcdctl_version_output
      changed_when: false

    - name: Ensure etcdctl version output contains correct version string
      ansible.builtin.assert:
        that:
          - "etcdctl_version in etcdctl_version_output.stdout"

    - name: Check etcd endpoint health
      ansible.builtin.shell: >
        set -o errexit; \
        set -o pipefail; \
        ETCDCTL_API=3 etcdctl endpoint health \
        --endpoints=https://localhost:2379 \
        --cacert={{ etcd_conf_dir }}/ca-etcd.pem \
        --cert={{ etcd_conf_dir }}/cert-etcd-server.pem \
        --key={{ etcd_conf_dir }}/cert-etcd-server-key.pem
      register: etcdctl_endpoint_health_output
      changed_when: false
      args:
        executable: "/bin/bash"

    - name: Assert etcd endpoint health
      ansible.builtin.assert:
        that:
          - "etcdctl_endpoint_health in etcdctl_endpoint_health_output.stdout"

    - name: Put test value into etcd
      ansible.builtin.shell: >
        set -o errexit; \
        set -o pipefail; \
        ETCDCTL_API=3 etcdctl put testkey {{ etcdctl_put }} \
        --endpoints=https://localhost:2379 \
        --cacert={{ etcd_conf_dir }}/ca-etcd.pem \
        --cert={{ etcd_conf_dir }}/cert-etcd-server.pem \
        --key={{ etcd_conf_dir }}/cert-etcd-server-key.pem
      register: etcdctl_put_output
      changed_when: false
      run_once: true  # noqa: run-once[task]
      delegate_to: "{{ groups['k8s_etcd'][0] }}"
      args:
        executable: "/bin/bash"

    - name: Assert etcdctl put
      ansible.builtin.assert:
        that:
          - "'OK' in etcdctl_put_output.stdout"
      run_once: true  # noqa: run-once[task]
      delegate_to: "{{ groups['k8s_etcd'][0] }}"

    - name: Get test value from etcd
      ansible.builtin.shell: >
        set -o errexit; \
        set -o pipefail; \
        ETCDCTL_API=3 etcdctl get testkey \
        --endpoints=https://localhost:2379 \
        --cacert={{ etcd_conf_dir }}/ca-etcd.pem \
        --cert={{ etcd_conf_dir }}/cert-etcd-server.pem \
        --key={{ etcd_conf_dir }}/cert-etcd-server-key.pem
      register: etcdctl_get_output
      changed_when: false
      run_once: true  # noqa: run-once[task]
      delegate_to: "{{ groups['k8s_etcd'][1] }}"
      args:
        executable: "/bin/bash"

    - name: Output testvalue
      ansible.builtin.debug:
        var: etcdctl_put
      run_once: true  # noqa: run-once[task]
      delegate_to: "{{ groups['k8s_etcd'][1] }}"

    - name: Assert etcdctl get
      ansible.builtin.assert:
        that:
          - "'{{ etcdctl_put }}' in etcdctl_get_output.stdout"
      run_once: true  # noqa: run-once[task]
      delegate_to: "{{ groups['k8s_etcd'][1] }}"
